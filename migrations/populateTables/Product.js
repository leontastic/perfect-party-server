const insertProduct = require('../../src/db/queries/insertProduct')

const foodItems = [
  ['Ahi tuna grilled rare', 'with a pepper crust served on toast point with garlic aioli', 33, 11, 'Cameroonian'],
  ['Antipasti skewers', 'marinated salami, olive, roasted pepper, cherry tomato,', 50, 15, 'Swedish'],
  ['Asparagus wrapped in puff pastry', 'dusted with pecorino-Romano cheese', 42, 15, 'American'],
  ['Beef tenderloin on seasoned crostini', 'with horseradish sauce', 48, 15, 'Indonesian'],
  ['Belgian endive spears', 'filled with candied walnuts, orange, and goat cheese', 51, 15, 'Indonesian'],
  ['Caprese salad skewers', 'with tomato, basil and mozzarella', 49, 15, 'Filipino'],
  ['Caramelized onion', 'and goat cheese pinwheel', 41, 15, 'Greek'],
  ['Chicken bites', 'encrusted with pecans and cranberry served with an orange dipping sauce', 35, 11, 'Chinese'],
  ['Chicken/vegetable dumplings', 'pan fried (With an Asian ginger sauce)', 37, 11, 'Filipino'],
  ['Coconut Shrimp', 'served with a spicy orange apricot sauce', 29, 11, 'Chinese'],
  ['Crispy polenta square', 'topped with gorgonzola, pine nuts and currants', 43, 15, 'Chinese'],
  ['Crudité and dip', 'in shooter cups', 54, 15, 'Mexican'],
  ['Hummus in shooter cups', 'with vegetable sticks', 53, 15, 'Chinese'],
  ['Lollipop lamb chops', 'with a honey mustard and rosemary glaze', 40, 15, 'Lithuanian'],
  ['Mini Buffalo chicken balls', 'served with a blue cheese dipping sauce', 36, 11, 'Chinese'],
  ['Mini Maryland style crab cakes', 'served with our house made Chesapeake Bay sauce', 32, 11, 'Armenian'],
  ['Pigs in blanket made', 'with spicy Andouille sausage', 39, 11, 'American'],
  ['Rice balls (arancini)', 'served with a marinara dipping sauce', 44, 15, 'Serbian'],
  ['Sea scallops', 'wrapped in bacon', 31, 11, 'Iranian'],
  ['Shrimp wrapped in bacon', 'with a horseradish filling', 28, 11, 'Chinese'],
  ['Sirloin on a homemade potato chip', 'topped with caramelized onion and bleu cheese', 38, 11, 'Vietnamese'],
  ['Sliced Anjou pears', 'topped with blue cheese and walnuts and honey', 52, 15, 'Thai'],
  ['Smoked salmon on cucumber', 'with dill herb cream cheese', 47, 15, 'Iranian'],
  ['Smoked trout with horseradish mousse', 'served on a Belgian endive spear or crispy wonton', 46, 15, 'Nigerian'],
  ['Spicy chicken satay', 'with a ranch dipping sauce', 34, 11, 'Polish'],
  ['Sweet Thai chili shrimp', 'served in an endive leave', 30, 11, 'Peruvian'],
  ['Tuna tartar on crispy wontons', 'with wasabi', 45, 15, 'Russian'],
]

const decorItems = [
  ['Aisle Markers', 'Needs-based aisle markers for all occasions', 15, 8, 'Crimson'],
  ['Aisle Runner', 'Empowering aisle runner for all occasions', 16, 8, 'Goldenrod'],
  ['Bar Menu or Signature Cocktail List', 'Executive bar menu list for all occasions', 48, 5, 'Puce'],
  ['Bar or Drink Station Display', 'Hybrid bar or drink station display for all occasions', 47, 5, 'Indigo'],
  ['Cake Stand + Topper', 'Systematic cake stand + topper for all occasions', 44, 5, 'Orange'],
  ['Candles', 'Right-sized candles for all occasions', 36, 5, 'Khaki'],
  ['Cards Receptacle + Sign', 'Visionary cards receptacle + sign for all occasions', 40, 1, 'Maroon'],
  ['Centerpieces', 'Fully-configurable centerpieces for all occasions', 21, 1, 'Crimson'],
  ['Ceremony Arch', 'Enhanced ceremony arch for all occasions', 17, 1, 'Orange'],
  ['Ceremony Backdrop', 'Modular ceremony backdrop for all occasions', 18, 1, 'Red'],
  ['Ceremony Materials Table', 'Re-contextualized ceremony materials table for all occasions', 20, 8, 'Turquoise'],
  ['Chairback Décor', 'Even-keeled chairback décor for all occasions', 35, 5, 'Goldenrod'],
  ['Chargers', 'Pre-emptive chargers for all occasions', 28, 8, 'Yellow'],
  ['Cute Quote Signs', 'Up-sized cute quote signs for all occasions', 54, 5, 'Indigo'],
  ['Dessert Displays', 'Fresh-thinking dessert displays for all occasions', 45, 5, 'Maroon'],
  ['Dessert Table + Décor Vignette', 'Radical dessert table + décor vignette for all occasions', 43, 5, 'Green'],
  ['Dessert Table Backdrop', 'Contingency dessert table backdrop for all occasions', 46, 5, 'Orange'],
  ['Dinner Plate', 'Modular dinner plate for all occasions', 30, 8, 'Maroon'],
  ['Escort Card Display', 'Foreground escort card display for all occasions', 42, 5, 'Violet'],
  ['Escort Cards', '3rd generation escort cards for all occasions', 25, 8, 'Yellow'],
  ['Gift Table + Décor Vignette', 'Executive gift table + décor vignette for all occasions', 39, 1, 'Orange'],
  ['Guest Book + Sign', 'Horizontal guest book + sign for all occasions', 38, 5, 'Orange'],
  ['Guest Book Table + Décor Vignette', '6th generation guest book table for all occasions', 37, 1, 'Khaki'],
  ['Lounge Seating + Side Tables', 'Monitored lounge seating + side tables for all occasions', 53, 1, 'Aquamarine'],
  ['Menu Sign', '24/7 menu sign for all occasions', 41, 5, 'Purple'],
  ['Menus', 'Open architecture menus for all occasions', 26, 8, 'Purple'],
  ['Napkins', 'Context-sensitive napkins for all occasions', 32, 5, 'Indigo'],
  ['Order of Events Sign', 'Triple-buffered order of events sign for all occasions', 14, 1, 'Turquoise'],
  ['Overhead Décor', 'Mobile overhead décor for all occasions', 50, 1, 'Red'],
  ['Photo Booth Backdrop + Props', 'Cloned photo booth backdrop + props for all occasions', 52, 5, 'Khaki'],
  ['Place mats', 'Robust place mats for all occasions', 27, 8, 'Yellow'],
  ['Program Display', 'Uniform program display for all occasions', 13, 8, 'Blue'],
  ['Reception Lighting', 'Global reception lighting for all occasions', 49, 1, 'Fuscia'],
  ['Salad Plate', 'Focused salad plate for all occasions', 29, 8, 'Goldenrod'],
  ['Seating or Ceremony Instructions Sign', 'Open system seating sign for all occasions', 12, 1, 'Pink'],
  ['Silverware', 'Maximized silverware for all occasions', 31, 1, 'Aquamarine'],
  ['Table Garland', 'Enhanced table garland for all occasions', 22, 8, 'Mauv'],
  ['Table Numbers', 'Optimized table numbers for all occasions', 24, 1, 'Aquamarine'],
  ['Table Runner', 'Maximized table runner for all occasions', 23, 8, 'Aquamarine'],
  ['Vow Books', 'Eco-centric vow books for all occasions', 19, 8, 'Turquoise'],
  ['Water Glass', 'Exuding water glass for all occasions', 33, 5, 'Red'],
  ['Wedding Favor Display', 'Toolset wedding favor display for all occasions', 51, 1, 'Blue'],
  ['Welcome Sign', 'Next generation welcome sign for all occasions', 11, 8, 'Red'],
  ['Wine Glass', 'Visionary wine glass for all occasions', 34, 5, 'Goldenrod'],
]

const entertainment = [
  ['Adele', 'English singer-songwriter', 101697, 14, 6],
  ['Arcade Fire', 'Canadian indie rock band', 82687, 14, 12],
  ['Ariana Grande', 'American singer, songwriter, and actress', 78885, 12, 12],
  ['Backstreet Boys', 'American vocal group, formed in Orlando, Florida in 1993', 116905, 12, 6],
  ['Billie Eilish', 'American singer, songwriter, and model', 111202, 14, 6],
  ['Bon Jovi', 'American rock band formed in 1983 in Sayreville, New Jersey', 56073, 14, 18],
  ['Bruno Mars', 'American singer, songwriter, multi-instrumentalist, record producer, and dancer', 95994, 14, 6],
  ['Cardi B', 'American rapper, singer, songwriter, actress, and television personality', 76984, 12, 12],
  ['Carrie Underwood', 'American singer, songwriter, and actress', 67479, 14, 12],
  ['Chris Brown', 'American singer, songwriter, dancer, actor and entrepreneur', 118806, 13, 6],
  ['David Bowie', 'English singer-songwriter and actor', 88390, 13, 12],
  ['Drake', 'Canadian rapper, singer, songwriter, record producer, actor, and entrepreneur', 52271, 14, 18],
  ['Ed Sheeran', 'English singer-songwriter, guitarist, record producer, and actor', 80786, 13, 12],
  ['Eminem', 'American rapper, songwriter, record producer, record executive, film producer, and actor', 63677, 13, 18],
  ['Fall Out Boy', 'American rock band formed in Wilmette, Illinois, a suburb of Chicago, in 2001', 90291, 14, 12],
  ['Foo Fighters', 'American rock band, formed in Seattle, Washington, in 1994', 92192, 13, 12],
  ['Imagine Dragons', 'American pop rock band from Las Vegas, Nevada', 103598, 13, 6],
  ['Jay-Z', 'American rapper, songwriter, producer, entrepreneur, and record executive', 57974, 14, 18],
  ['Jonas Brothers', 'American pop rock band', 97895, 13, 6],
  ['Justin Bieber', 'Canadian singer, songwriter, actor and rapper', 105499, 14, 6],
  ['Justin Timberlake', 'American singer, songwriter, actor, dancer and record producer', 113103, 14, 6],
  ['Kanye West', 'American rapper, singer, songwriter, producer, entrepreneur, and fashion designer', 86489, 13, 12],
  ['Katy Perry', 'American singer, songwriter, and television judge', 115004, 13, 6],
  ['Kesha', 'American singer, songwriter, rapper, and actress', 59875, 13, 18],
  ['Lady Gaga', 'American singer, songwriter and actress', 120707, 14, 6],
  ['Lil Wayne', 'American rapper, singer, songwriter, record executive, entrepreneur, and actor', 107400, 14, 6],
  ['Maroon 5', 'American pop rock band from Los Angeles, California', 99796, 12, 6],
  ['Meghan Trainor', 'American singer-songwriter', 71281, 14, 12],
  ['Panic! at the Disco', 'American rock band from Las Vegas, Nevada', 109301, 14, 6],
  ['Paul McCartney', 'English singer-songwriter, multi-instrumentalist, and composer', 69380, 14, 12],
  ['Prince', 'American singer, songwriter, musician, record producer, dancer, actor, and filmmaker', 61776, 14, 18],
  ['Queen', 'British rock band formed in London in 1970', 73182, 12, 12],
  ['Sam Smith', 'English singer and songwriter', 84588, 12, 12],
  ['Shawn Mendes', 'Canadian singer, songwriter, and model', 50370, 12, 18],
  ['Taylor Swift', 'American singer-songwriter', 94093, 14, 12],
  ['The Chainsmokers', 'American DJ and production duo', 75083, 12, 12],
  ['The Weeknd', 'Canadian singer, songwriter and record producer', 65578, 14, 18],
  ['U2', 'Irish rock band from Dublin, formed in 1976', 54172, 14, 18],
]

const populateFoodItems = foodItems.map(([name, description, price, supplierid, cuisine]) => ({
  producttype: 'FoodItem',
  name,
  description,
  price,
  supplierid,
  cuisine,
}))

const populateDecorItems = decorItems.map(([name, description, price, supplierid, color]) => ({
  producttype: 'DecorItem',
  name,
  description,
  price,
  supplierid,
  color,
}))

const populateEntertainment = entertainment.map(([name, description, price, supplierid, agerestriction]) => ({
  producttype: 'Entertainment',
  name,
  description,
  price,
  supplierid,
  agerestriction,
}))

module.exports = [...populateFoodItems, ...populateDecorItems, ...populateEntertainment].map(insertProduct).join('\n')
